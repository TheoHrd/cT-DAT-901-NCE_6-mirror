version: '2.1'

networks:
  kafkanet:
    driver: bridge

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9093:9093'
    networks:
      - kafkanet
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1"]
      interval: 1s
      timeout: 60s
      retries: 60
  spark:
    image: 'bitnami/spark:latest'
    command: 'spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.3 /app/spark.py'
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - './spark_app:/app'
      - './config.ini:/config.ini'
    networks:
      - kafkanet
    depends_on:
      kafka:
        condition: service_healthy
      scrapper:
        condition: service_started
  scrapper:
    build: ./scrapper/
    volumes:
      - './config.ini:/usr/src/app/config.ini'
    ports:
      - "8000:5000"
    networks:
      - kafkanet
    depends_on:
      kafka:
        condition: service_healthy